version: '3.8'

services:
  moviepilot:
    build:
      context: .
      dockerfile: docker/Dockerfile
    container_name: moviepilot
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - ./config:/config
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - PUID=1000
      - PGID=1000
      - UMASK=022
      - CONFIG_DIR=/config
      - MOVIEPILOT_AUTO_UPDATE=release
      # 可选：代理设置
      # - PIP_PROXY=https://pypi.tuna.tsinghua.edu.cn/simple
      # - GITHUB_PROXY=https://ghproxy.com/
      # - PROXY_HOST=http://proxy:7890
      # - GITHUB_TOKEN=your_github_token
      # 可选：数据库设置
      # - DB_TYPE=postgresql
      # - DB_POSTGRESQL_HOST=postgres
      # - DB_POSTGRESQL_PORT=5432
      # - DB_POSTGRESQL_DATABASE=moviepilot
      # - DB_POSTGRESQL_USERNAME=moviepilot
      # - DB_POSTGRESQL_PASSWORD=moviepilot
      # 可选：SSL设置
      # - ENABLE_SSL=true
      # - SSL_DOMAIN=your.domain.com
    networks:
      - moviepilot_network
    depends_on:
      - postgres
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/v1/system/version"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  postgres:
    image: postgres:15-alpine
    container_name: moviepilot_postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=moviepilot
      - POSTGRES_USER=moviepilot
      - POSTGRES_PASSWORD=moviepilot
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - moviepilot_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U moviepilot -d moviepilot"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    container_name: moviepilot_redis
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - moviepilot_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
  redis_data:

networks:
  moviepilot_network:
    driver: bridge